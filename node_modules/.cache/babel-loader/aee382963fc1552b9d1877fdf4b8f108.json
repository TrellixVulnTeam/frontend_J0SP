{"ast":null,"code":"var _jsxFileName = \"/home/imane/Documents/M1/S2/Projet annuel/frontend/src/components/LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport picspyLogo from '../assets/PicSpyLogo.png';\nimport { useSignIn } from 'react-auth-kit';\nimport { useState } from 'react';\nimport Axios from '../axios-config';\nimport toast from 'react-hot-toast';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = () => {\n  _s();\n\n  const signIn = useSignIn();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  async function login() {\n    const toastId = toast.loading('Logging in...');\n    Axios.post('/auth/login', {\n      username,\n      password\n    }).then(({\n      data: {\n        content: {\n          access_token\n        }\n      }\n    }) => {\n      // const header: { alg: string, typ: string } = JSON.parse(atob(access_token.split('.')[0]))\n      const userInfo = JSON.parse(atob(access_token.split('.')[1]));\n\n      if (signIn({\n        token: access_token,\n        expiresIn: userInfo.iat,\n        tokenType: 'Bearer',\n        authState: userInfo\n      })) {\n        setRedirect(true);\n        toast.success(`Logged in successfuly as ${username} !`, {\n          id: toastId\n        });\n      } else {\n        throw new Error('Could not login.');\n      }\n    }).catch(err => {\n      if (err.isAxiosError) {\n        var _err$response;\n\n        toast.error(`Could not login: ${(_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data.message}`, {\n          id: toastId\n        });\n      } else {\n        toast.error(`Could not login: ${err}`, {\n          id: toastId\n        });\n      }\n    });\n  }\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image h-32\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"object-contain\",\n          alt: \"Login\",\n          src: picspyLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"username\",\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => login(),\n        onKeyPress: event => {\n          if (event.key === 'Enter') {\n            login();\n          }\n        },\n        type: \"button\",\n        className: \"bg-blue-500 rounded-lg px-6 py-2\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"yJ9LAY0KZbiSMn9QvM1xzSAZ+yI=\", false, function () {\n  return [useSignIn];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/imane/Documents/M1/S2/Projet annuel/frontend/src/components/LoginForm.tsx"],"names":["React","picspyLogo","useSignIn","useState","Axios","toast","Redirect","LoginForm","signIn","username","setUsername","password","setPassword","redirect","setRedirect","login","toastId","loading","post","then","data","content","access_token","userInfo","JSON","parse","atob","split","token","expiresIn","iat","tokenType","authState","success","id","Error","catch","err","isAxiosError","error","response","message","e","target","value","event","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport picspyLogo from '../assets/PicSpyLogo.png';\nimport { useSignIn } from 'react-auth-kit';\nimport { useState } from 'react';\nimport Axios from '../axios-config';\nimport toast from 'react-hot-toast';\nimport { Redirect } from 'react-router-dom';\n\nexport const LoginForm = () => {\n  const signIn = useSignIn();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  async function login() {\n    const toastId = toast.loading('Logging in...');\n    Axios.post('/auth/login', { username, password })\n      .then(\n        ({\n          data: {\n            content: { access_token },\n          },\n        }) => {\n          // const header: { alg: string, typ: string } = JSON.parse(atob(access_token.split('.')[0]))\n          const userInfo: { username: string; sub: string; iat: number } =\n            JSON.parse(atob(access_token.split('.')[1]));\n          if (\n            signIn({\n              token: access_token,\n              expiresIn: userInfo.iat,\n              tokenType: 'Bearer',\n              authState: userInfo,\n            })\n          ) {\n            setRedirect(true);\n            toast.success(`Logged in successfuly as ${username} !`, {\n              id: toastId,\n            });\n          } else {\n            throw new Error('Could not login.');\n          }\n        },\n      )\n      .catch((err) => {\n        if (err.isAxiosError) {\n          toast.error(`Could not login: ${err.response?.data.message}`, {\n            id: toastId,\n          });\n        } else {\n          toast.error(`Could not login: ${err}`, { id: toastId });\n        }\n      });\n  }\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"base-container\">\n      <div className=\"content\">\n        <div className=\"image h-32\">\n          <img className=\"object-contain\" alt=\"Login\" src={picspyLogo} />\n        </div>\n        <div className=\"header text-center\">Login</div>\n        <div className=\"form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              className=\"text-black\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"username\"\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              className=\"text-black\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        {/* <Link to=\"/\" className=\"nav-links\"> */}\n        <button\n          onClick={(e) => login()}\n          onKeyPress={(event)=> {\n            if(event.key === 'Enter'){\n              login()\n            }\n          }\n        }\n          type=\"button\"\n          className=\"bg-blue-500 rounded-lg px-6 py-2\"\n        >\n          Login\n        </button>\n        {/* </Link> */}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}