{"ast":null,"code":"var _jsxFileName = \"/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/CreateChallenge.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAuthHeader } from 'react-auth-kit';\nimport '../components/style.scss';\nimport Axios from '../axios-config';\nimport toast from 'react-hot-toast';\nimport { CreateExecBootstrapListElement } from '../components/challenges/CreateExecBootstrapListElement';\nimport { useHistory } from 'react-router-dom';\nimport { Picture } from '../components/challenges/Picture';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateChallenge = props => {\n  _s();\n\n  var _props$match3, _props$match3$params, _props$match5, _props$match5$params;\n\n  const [name, setName] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [fetchedImages, setFetchedImages] = useState([]);\n  const [images, setImages] = useState([]);\n  const [bootstraps, setBootstraps] = useState({});\n  const [languages, setLanguages] = useState([]);\n  const [usedLanguages, setUsedLanguages] = useState([]);\n  const getAuthToken = useAuthHeader();\n  const history = useHistory();\n  useEffect(() => {\n    Axios.get('/languages').then(({\n      data: {\n        content\n      }\n    }) => {\n      setLanguages(content);\n    }).catch(err => {\n      toast.error(`Could not load languages: ${err}`);\n    });\n  }, []); //load existing challenge if exists\n\n  useEffect(() => {\n    var _props$match, _props$match$params, _props$match2, _props$match2$params;\n\n    if (!((_props$match = props.match) === null || _props$match === void 0 ? void 0 : (_props$match$params = _props$match.params) === null || _props$match$params === void 0 ? void 0 : _props$match$params.id)) {\n      return;\n    }\n\n    const id = (_props$match2 = props.match) === null || _props$match2 === void 0 ? void 0 : (_props$match2$params = _props$match2.params) === null || _props$match2$params === void 0 ? void 0 : _props$match2$params.id;\n    Axios.get(`/challenges/${id}`).then(({\n      data\n    }) => {\n      setName(data.content.name);\n      setInstructions(data.content.instructions);\n      setFetchedImages(data.content.pictures);\n      const bootstrapsObject = {};\n      data.content.execBootstraps.forEach(bs => {\n        bootstrapsObject[bs.language] = bs;\n      });\n      console.log(bootstrapsObject);\n      setBootstraps(bootstrapsObject);\n      setUsedLanguages(data.content.execBootstraps.map(bs => {\n        return {\n          name: bs.language\n        };\n      }));\n    }).catch(err => {\n      toast.error(`Failed to load challenge with id: ${id} \\n ${err}`);\n    });\n  }, [(_props$match3 = props.match) === null || _props$match3 === void 0 ? void 0 : (_props$match3$params = _props$match3.params) === null || _props$match3$params === void 0 ? void 0 : _props$match3$params.id]);\n\n  async function postChallenge() {\n    const params = new FormData();\n    params.append('name', name);\n    params.append('instructions', instructions);\n    images.forEach(image => {\n      params.append('pictures', image);\n    });\n    const toastId = toast.loading('Sending Challenge...');\n    Axios.post(`/challenges`, params, {\n      headers: {\n        Authorization: getAuthToken(),\n        'content-type': 'multipart/form-data'\n      }\n    }).then(({\n      data: {\n        content\n      }\n    }) => {\n      toast.loading(`Sending languages...`, {\n        id: toastId\n      });\n      const payload = Object.values(bootstraps).map(b => {\n        return { ...b,\n          challenge: content._id\n        };\n      });\n      Promise.all(payload.map(async p => await postExecBootstrap(p))).then(() => {\n        toast.success(`Successfully uploaded challenge !`, {\n          id: toastId\n        });\n        history.push('/challenges');\n      }).catch(err => {\n        toast.error(`Could not add language option: ${err.response.data.message || 'An unknown error occured'}`, {\n          id: toastId\n        });\n        history.push(`/edit/challenge/${content._id}`);\n      });\n    }).catch(err => {\n      toast.error(`Could not create challenge: ${err.response.data.message || 'An unknown error occured'}`, {\n        id: toastId\n      });\n    });\n  }\n\n  async function updateChallenge() {\n    var _props$match4, _props$match4$params;\n\n    const id = (_props$match4 = props.match) === null || _props$match4 === void 0 ? void 0 : (_props$match4$params = _props$match4.params) === null || _props$match4$params === void 0 ? void 0 : _props$match4$params.id;\n    const params = new FormData();\n    params.append('name', name);\n    params.append('instructions', instructions);\n    images.forEach(image => {\n      params.append('pictures', image);\n    });\n    const toastId = toast.loading('Sending Challenge...');\n    Axios.put(`/challenges/${id}`, params, {\n      headers: {\n        Authorization: getAuthToken(),\n        'content-type': 'multipart/form-data'\n      }\n    }).then(_ => {\n      toast.loading(`Sending languages...`, {\n        id: toastId\n      });\n      const payload = Object.values(bootstraps).map(b => {\n        return { ...b,\n          challenge: id\n        };\n      });\n      Promise.all(payload.map(async p => p._id ? await updateExecBootstrap(p) : await postExecBootstrap(p))).then(() => {\n        toast.success(`Successfully uploaded challenge !`, {\n          id: toastId\n        });\n        history.push('/challenges');\n      }).catch(err => {\n        toast.error(`Could not add or modify language option: ${err.response.data.message || 'An unknown error occured'}`, {\n          id: toastId\n        });\n        history.push(`/edit/challenge/${id}`);\n      });\n    }).catch(err => {\n      var _err$response, _err$response$data;\n\n      toast.error(`Could not update challenge: ${(err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'An unknown error occured'}`, {\n        id: toastId\n      });\n      console.error(err);\n    });\n  }\n\n  async function postExecBootstrap(bootstrap) {\n    await Axios.post('/exec-bootstraps', bootstrap, {\n      headers: {\n        Authorization: getAuthToken()\n      }\n    });\n  }\n\n  async function updateExecBootstrap(bootstrap) {\n    await Axios.put(`/exec-bootstraps/${bootstrap._id}`, bootstrap, {\n      headers: {\n        Authorization: getAuthToken()\n      }\n    });\n  }\n\n  function onFileChange(e) {\n    var _e$target$files;\n\n    const files = [...images];\n\n    if (e.target.files && ((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files.length) > 0) {\n      files.push(e.target.files[0]);\n    }\n\n    setImages(files);\n  }\n\n  function removeLocalImage(index) {\n    const currentImages = [...images];\n    currentImages.splice(index, 1);\n    setImages(currentImages);\n  }\n\n  function removeFetchedImage(index, image) {\n    const toastId = toast.loading('Deleting remote image...');\n    Axios.delete(`/pictures/picspy-challenges/${image._id}`, {\n      headers: {\n        Authorization: getAuthToken(),\n        'content-type': 'multipart/form-data'\n      }\n    }).then(_ => {\n      toast.success('Image deleted !', {\n        id: toastId\n      });\n      const currentImages = [...fetchedImages];\n      currentImages.splice(index, 1);\n      setFetchedImages(currentImages);\n    }).catch(err => {\n      var _err$response2, _err$response2$data;\n\n      toast.error(`Could not delete Image : ${(err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'An unknown error occured'}`, {\n        id: toastId\n      });\n    });\n  }\n\n  function onAddLanguage(language) {\n    const usedLanguagesCopy = [...usedLanguages, {\n      name: language\n    }];\n    setUsedLanguages(usedLanguagesCopy);\n  }\n\n  function onExecBootstrapUpdate(execBootstrap, language) {\n    const bootstrapsCopy = { ...bootstraps,\n      [language]: { ...execBootstrap,\n        language\n      }\n    };\n    setBootstraps(bootstrapsCopy);\n  }\n\n  function onExecBootstrapRemove(language) {\n    if (bootstraps[language]._id) {\n      const toastId = toast.loading('Deleting Language option...');\n      Axios.delete(`/exec-bootstraps/${bootstraps[language]._id}`, {\n        headers: {\n          Authorization: getAuthToken(),\n          'content-type': 'multipart/form-data'\n        }\n      }).then(_ => {\n        toast.success('Deleted language option.', {\n          id: toastId\n        });\n        delete bootstraps[language];\n        setUsedLanguages([...usedLanguages.filter(ul => ul.name !== language)]);\n      }).catch(err => {\n        var _err$response3, _err$response3$data;\n\n        toast.error(`Could not delete Image : ${(err === null || err === void 0 ? void 0 : (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'An unknown error occured'}`, {\n          id: toastId\n        });\n      });\n    } else {\n      delete bootstraps[language];\n      setUsedLanguages([...usedLanguages.filter(ul => ul.name !== language)]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 gap-4 rounded m-5 p-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-5 bg-gray-600 rounded p-10 pt-8 relative overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-0 right-0 bg-blue-500 hover:bg-blue-700 py-2 px-3 rounded-bl-lg text-lg\",\n          onClick: ((_props$match5 = props.match) === null || _props$match5 === void 0 ? void 0 : (_props$match5$params = _props$match5.params) === null || _props$match5$params === void 0 ? void 0 : _props$match5$params.id) ? updateChallenge : postChallenge,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl\",\n          children: \"Create your own challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 flex flex-col items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-start w-auto p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-lg\",\n              htmlFor: \"username\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"text-black rounded-md py-1 px-2\",\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"name\",\n              onChange: e => setName(e.target.value),\n              value: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-start w-full p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-lg\",\n              htmlFor: \"username\",\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"text-black rounded-md py-1 px-2 h-40 w-full\",\n              name: \"instructions\",\n              placeholder: \"instructions\",\n              onChange: e => setInstructions(e.target.value),\n              value: instructions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4 rounded m-5 p-10\",\n      children: [usedLanguages.map((language, index) => /*#__PURE__*/_jsxDEV(CreateExecBootstrapListElement, {\n        language: language.name,\n        onChange: ebPartial => onExecBootstrapUpdate(ebPartial, language.name),\n        onRemove: () => onExecBootstrapRemove(language.name),\n        initialValues: bootstraps[language.name]\n      }, `exec-bootstrap-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this)), languages.length > usedLanguages.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-auto text-center bg-gray-600 rounded p-5 flex flex-col items-center ${usedLanguages.length % 2 === 0 && 'col-span-2'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mb-5\",\n          children: \"Add a language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-lg overflow-hidden grid grid-cols-1 gap-1 w-2/6 m-auto\",\n          children: languages.filter(l => !usedLanguages.some(ul => l.name === ul.name)).map((language, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full mx-auto bg-blue-500 hover:bg-blue-700 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-full h-full px-2 py-4\",\n              onClick: _ => onAddLanguage(language.name),\n              children: language.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 21\n            }, this)\n          }, `language-button-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 gap-4 rounded m-5 p-10\",\n      children: [fetchedImages.map((image, index) => /*#__PURE__*/_jsxDEV(Picture, {\n        image: image.file,\n        onRemoveImage: () => removeFetchedImage(index, image)\n      }, `linked-picture-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)), images.map((image, index) => /*#__PURE__*/_jsxDEV(Picture, {\n        image: image,\n        onRemoveImage: () => removeLocalImage(index)\n      }, `loaded-picture-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)), images.length + fetchedImages.length < 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-auto text-center bg-gray-600 rounded p-5 flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mb-5\",\n          children: \"Add a picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"w-32 flex flex-col items-center px-4 py-6 bg-blue-500 hover:bg-blue-700 rounded-md shadow-md tracking-wide cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-cloud-upload-alt fa-2x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mt-2 text-base \",\n            children: \"Browse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"hidden\",\n            onChange: onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateChallenge, \"hwYBTKHTEqJXnbCD4zk7oumDoRg=\", false, function () {\n  return [useAuthHeader, useHistory];\n});\n\n_c = CreateChallenge;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChallenge\");","map":{"version":3,"sources":["/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/CreateChallenge.tsx"],"names":["React","useEffect","useState","useAuthHeader","Axios","toast","CreateExecBootstrapListElement","useHistory","Picture","CreateChallenge","props","name","setName","instructions","setInstructions","fetchedImages","setFetchedImages","images","setImages","bootstraps","setBootstraps","languages","setLanguages","usedLanguages","setUsedLanguages","getAuthToken","history","get","then","data","content","catch","err","error","match","params","id","pictures","bootstrapsObject","execBootstraps","forEach","bs","language","console","log","map","postChallenge","FormData","append","image","toastId","loading","post","headers","Authorization","payload","Object","values","b","challenge","_id","Promise","all","p","postExecBootstrap","success","push","response","message","updateChallenge","put","_","updateExecBootstrap","bootstrap","onFileChange","e","files","target","length","removeLocalImage","index","currentImages","splice","removeFetchedImage","delete","onAddLanguage","usedLanguagesCopy","onExecBootstrapUpdate","execBootstrap","bootstrapsCopy","onExecBootstrapRemove","filter","ul","value","ebPartial","l","some","file"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAuthHeader } from 'react-auth-kit';\nimport '../components/style.scss';\n\nimport Axios from '../axios-config';\nimport toast from 'react-hot-toast';\nimport {\n  CreateExecBootstrapListElement,\n  ExecBootstrap,\n} from '../components/challenges/CreateExecBootstrapListElement';\nimport { useHistory } from 'react-router-dom';\nimport { Picture } from '../components/challenges/Picture';\n\ntype ImageEntity = {\n  file: string;\n  _id: string;\n};\n\nexport const CreateChallenge = (props: {\n  match?: { params?: { id?: string } };\n}) => {\n  const [name, setName] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [fetchedImages, setFetchedImages] = useState([] as ImageEntity[]);\n  const [images, setImages] = useState([] as File[]);\n  const [bootstraps, setBootstraps] = useState(\n    {} as Record<string, ExecBootstrap>,\n  );\n  const [languages, setLanguages] = useState([] as { name: string }[]);\n  const [usedLanguages, setUsedLanguages] = useState([] as { name: string }[]);\n\n  const getAuthToken = useAuthHeader();\n  const history = useHistory();\n\n  useEffect(() => {\n    Axios.get('/languages')\n      .then(({ data: { content } }) => {\n        setLanguages(content);\n      })\n      .catch((err) => {\n        toast.error(`Could not load languages: ${err}`);\n      });\n  }, []);\n\n  //load existing challenge if exists\n  useEffect(() => {\n    if (!props.match?.params?.id) {\n      return;\n    }\n    const id = props.match?.params?.id;\n\n    Axios.get(`/challenges/${id}`)\n      .then(({ data }) => {\n        setName(data.content.name);\n        setInstructions(data.content.instructions);\n\n        setFetchedImages(data.content.pictures);\n\n        const bootstrapsObject = {} as Record<string, ExecBootstrap>;\n        data.content.execBootstraps.forEach((bs: ExecBootstrap) => {\n          bootstrapsObject[bs.language] = bs;\n        });\n        console.log(bootstrapsObject);\n        setBootstraps(bootstrapsObject);\n\n        setUsedLanguages(\n          data.content.execBootstraps.map((bs: { language: string }) => {\n            return { name: bs.language };\n          }),\n        );\n      })\n      .catch((err) => {\n        toast.error(`Failed to load challenge with id: ${id} \\n ${err}`);\n      });\n  }, [props.match?.params?.id]);\n\n  async function postChallenge() {\n    const params = new FormData();\n    params.append('name', name);\n    params.append('instructions', instructions);\n\n    images.forEach((image) => {\n      params.append('pictures', image);\n    });\n\n    const toastId = toast.loading('Sending Challenge...');\n    Axios.post(`/challenges`, params, {\n      headers: {\n        Authorization: getAuthToken(),\n        'content-type': 'multipart/form-data',\n      },\n    })\n      .then(({ data: { content } }) => {\n        toast.loading(`Sending languages...`, {\n          id: toastId,\n        });\n\n        const payload = Object.values(bootstraps).map((b) => {\n          return { ...b, challenge: content._id };\n        });\n\n        Promise.all(payload.map(async (p) => await postExecBootstrap(p)))\n          .then(() => {\n            toast.success(`Successfully uploaded challenge !`, {\n              id: toastId,\n            });\n            history.push('/challenges');\n          })\n          .catch((err) => {\n            toast.error(\n              `Could not add language option: ${\n                err.response.data.message || 'An unknown error occured'\n              }`,\n              { id: toastId },\n            );\n            history.push(`/edit/challenge/${content._id}`);\n          });\n      })\n      .catch((err) => {\n        toast.error(\n          `Could not create challenge: ${\n            err.response.data.message || 'An unknown error occured'\n          }`,\n          { id: toastId },\n        );\n      });\n  }\n\n  async function updateChallenge() {\n    const id = props.match?.params?.id;\n\n    const params = new FormData();\n    params.append('name', name);\n    params.append('instructions', instructions);\n\n    images.forEach((image) => {\n      params.append('pictures', image);\n    });\n\n    const toastId = toast.loading('Sending Challenge...');\n\n    Axios.put(`/challenges/${id}`, params, {\n      headers: {\n        Authorization: getAuthToken(),\n        'content-type': 'multipart/form-data',\n      },\n    })\n      .then((_) => {\n        toast.loading(`Sending languages...`, {\n          id: toastId,\n        });\n\n        const payload = Object.values(bootstraps).map((b) => {\n          return { ...b, challenge: id };\n        });\n\n        Promise.all(\n          payload.map(async (p) =>\n            p._id ? await updateExecBootstrap(p) : await postExecBootstrap(p),\n          ),\n        )\n          .then(() => {\n            toast.success(`Successfully uploaded challenge !`, {\n              id: toastId,\n            });\n            history.push('/challenges');\n          })\n          .catch((err) => {\n            toast.error(\n              `Could not add or modify language option: ${\n                err.response.data.message || 'An unknown error occured'\n              }`,\n              { id: toastId },\n            );\n            history.push(`/edit/challenge/${id}`);\n          });\n      })\n      .catch((err) => {\n        toast.error(\n          `Could not update challenge: ${\n            err?.response?.data?.message || 'An unknown error occured'\n          }`,\n          { id: toastId },\n        );\n        console.error(err);\n      });\n  }\n\n  async function postExecBootstrap(bootstrap: ExecBootstrap) {\n    await Axios.post('/exec-bootstraps', bootstrap, {\n      headers: {\n        Authorization: getAuthToken(),\n      },\n    });\n  }\n\n  async function updateExecBootstrap(bootstrap: ExecBootstrap) {\n    await Axios.put(`/exec-bootstraps/${bootstrap._id}`, bootstrap, {\n      headers: {\n        Authorization: getAuthToken(),\n      },\n    });\n  }\n\n  function onFileChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const files = [...images];\n\n    if (e.target.files && e.target.files?.length > 0) {\n      files.push(e.target.files[0]);\n    }\n\n    setImages(files);\n  }\n\n  function removeLocalImage(index: number) {\n    const currentImages = [...images];\n    currentImages.splice(index, 1);\n\n    setImages(currentImages);\n  }\n\n  function removeFetchedImage(index: number, image: ImageEntity) {\n    const toastId = toast.loading('Deleting remote image...');\n    Axios.delete(`/pictures/picspy-challenges/${image._id}`, {\n      headers: {\n        Authorization: getAuthToken(),\n        'content-type': 'multipart/form-data',\n      },\n    })\n      .then((_) => {\n        toast.success('Image deleted !', { id: toastId });\n        const currentImages = [...fetchedImages];\n        currentImages.splice(index, 1);\n\n        setFetchedImages(currentImages);\n      })\n      .catch((err) => {\n        toast.error(\n          `Could not delete Image : ${\n            err?.response?.data?.message || 'An unknown error occured'\n          }`,\n          { id: toastId },\n        );\n      });\n  }\n\n  function onAddLanguage(language: string) {\n    const usedLanguagesCopy = [...usedLanguages, { name: language }];\n    setUsedLanguages(usedLanguagesCopy);\n  }\n\n  function onExecBootstrapUpdate(\n    execBootstrap: { tests: string; functionTemplate: string },\n    language: string,\n  ) {\n    const bootstrapsCopy = {\n      ...bootstraps,\n      [language]: { ...execBootstrap, language },\n    };\n    setBootstraps(bootstrapsCopy);\n  }\n\n  function onExecBootstrapRemove(language: string) {\n    if (bootstraps[language]._id) {\n      const toastId = toast.loading('Deleting Language option...');\n      Axios.delete(`/exec-bootstraps/${bootstraps[language]._id}`, {\n        headers: {\n          Authorization: getAuthToken(),\n          'content-type': 'multipart/form-data',\n        },\n      })\n        .then((_) => {\n          toast.success('Deleted language option.', { id: toastId });\n          delete bootstraps[language];\n          setUsedLanguages([\n            ...usedLanguages.filter((ul) => ul.name !== language),\n          ]);\n        })\n        .catch((err) => {\n          toast.error(\n            `Could not delete Image : ${\n              err?.response?.data?.message || 'An unknown error occured'\n            }`,\n            { id: toastId },\n          );\n        });\n    } else {\n      delete bootstraps[language];\n      setUsedLanguages([...usedLanguages.filter((ul) => ul.name !== language)]);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"grid grid-cols-5 gap-4 rounded m-5 p-10\">\n        <div className=\"col-span-5 bg-gray-600 rounded p-10 pt-8 relative overflow-hidden\">\n          <button\n            className=\"absolute top-0 right-0 bg-blue-500 hover:bg-blue-700 py-2 px-3 rounded-bl-lg text-lg\"\n            onClick={props.match?.params?.id ? updateChallenge : postChallenge}\n          >\n            Save\n          </button>\n          <h1 className=\"text-3xl\">Create your own challenge</h1>\n          <div className=\"mt-2 flex flex-col items-start\">\n            <div className=\"flex flex-col items-start w-auto p-4\">\n              <label className=\"text-lg\" htmlFor=\"username\">\n                Name\n              </label>\n              <input\n                className=\"text-black rounded-md py-1 px-2\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"name\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n              />\n            </div>\n            <div className=\"flex flex-col items-start w-full p-4\">\n              <label className=\"text-lg\" htmlFor=\"username\">\n                Instructions\n              </label>\n              <textarea\n                className=\"text-black rounded-md py-1 px-2 h-40 w-full\"\n                name=\"instructions\"\n                placeholder=\"instructions\"\n                onChange={(e) => setInstructions(e.target.value)}\n                value={instructions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4 rounded m-5 p-10\">\n        {usedLanguages.map((language, index) => (\n          <CreateExecBootstrapListElement\n            key={`exec-bootstrap-${index}`}\n            language={language.name}\n            onChange={(ebPartial) =>\n              onExecBootstrapUpdate(ebPartial, language.name)\n            }\n            onRemove={() => onExecBootstrapRemove(language.name)}\n            initialValues={bootstraps[language.name]}\n          />\n        ))}\n        {languages.length > usedLanguages.length && (\n          <div\n            className={`h-auto text-center bg-gray-600 rounded p-5 flex flex-col items-center ${\n              usedLanguages.length % 2 === 0 && 'col-span-2'\n            }`}\n          >\n            <h2 className=\"text-lg mb-5\">Add a language</h2>\n            <div className=\"rounded-lg overflow-hidden grid grid-cols-1 gap-1 w-2/6 m-auto\">\n              {languages\n                .filter((l) => !usedLanguages.some((ul) => l.name === ul.name))\n                .map((language, index) => (\n                  <div\n                    className=\"w-full mx-auto bg-blue-500 hover:bg-blue-700 rounded-lg\"\n                    key={`language-button-${index}`}\n                  >\n                    <button\n                      className=\"w-full h-full px-2 py-4\"\n                      onClick={(_) => onAddLanguage(language.name)}\n                    >\n                      {language.name}\n                    </button>\n                  </div>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-5 gap-4 rounded m-5 p-10\">\n        {fetchedImages.map((image, index) => (\n          <Picture\n            image={image.file}\n            key={`linked-picture-${index}`}\n            onRemoveImage={() => removeFetchedImage(index, image)}\n          />\n        ))}\n        {images.map((image, index) => (\n          <Picture\n            image={image}\n            key={`loaded-picture-${index}`}\n            onRemoveImage={() => removeLocalImage(index)}\n          />\n        ))}\n        {images.length + fetchedImages.length < 10 && (\n          <div className=\"h-auto text-center bg-gray-600 rounded p-5 flex flex-col items-center\">\n            <h2 className=\"text-lg mb-5\">Add a picture</h2>\n\n            <label className=\"w-32 flex flex-col items-center px-4 py-6 bg-blue-500 hover:bg-blue-700 rounded-md shadow-md tracking-wide cursor-pointer\">\n              <i className=\"fas fa-cloud-upload-alt fa-2x\"></i>\n              <span className=\"mt-2 text-base \">Browse</span>\n              <input type=\"file\" className=\"hidden\" onChange={onFileChange} />\n            </label>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}