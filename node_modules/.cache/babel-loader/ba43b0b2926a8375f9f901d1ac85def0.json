{"ast":null,"code":"var _jsxFileName = \"/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Axios from '../axios-config';\nimport icone from '../assets/profile-icon.png';\nimport { ChallengeListitem } from '../components/ChallengeListItem';\nimport ProgressBar from '@ramonak/react-progress-bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Profile = props => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [challenges, setChallenges] = useState([]);\n  const [stats, setStats] = useState([]);\n  const [execStats, setExecStats] = useState({});\n  useEffect(() => {\n    const fetchStats = async () => {\n      Axios.get(`stats/default_series/${props.match.params.id}`).then(({\n        data\n      }) => {\n        console.log(data.content);\n        setStats(data.content.series);\n      }).catch(err => {\n        if (err.isAxiosError) {\n          toast.error(`Could not load series stats: ${err.response.data.message}`);\n        } else {\n          toast.error(`Could not load series stats: ${err}`);\n        }\n      });\n    };\n\n    const execStats = async () => {\n      Axios.get(`stats/execs/${props.match.params.id}`).then(({\n        data\n      }) => {\n        console.log(data.content);\n        setExecStats(data.content.series);\n      }).catch(err => {\n        if (err.isAxiosError) {\n          toast.error(`Could not load executions stats: ${err.response.data.message}`);\n        } else {\n          toast.error(`Could not load executions stats: ${err}`);\n        }\n      });\n    };\n\n    const fetchUser = async () => {\n      Axios.get(`/users/${props.match.params.id}`).then(({\n        data\n      }) => {\n        setUser(data.content);\n      }).catch(err => {\n        if (err.isAxiosError) {\n          toast.error(`Could not load profile: ${err.response.data.message}`);\n        } else {\n          toast.error(`Could not load profile: ${err}`);\n        }\n      });\n    };\n\n    execStats();\n    fetchUser();\n    fetchStats();\n  }, [props.match.params.id]);\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      Axios.get(`/challenges/user/${props.match.params.id}`).then(({\n        data\n      }) => {\n        setChallenges(data.content);\n      }).catch(err => {\n        if (err.isAxiosError) {\n          var _err$response;\n\n          toast.error(`Could not load challenges: ${(_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data.message}`);\n        } else {\n          toast.error(`Could not load challenges: ${err}`);\n        }\n      });\n    };\n\n    fetchChallenges();\n  }, [props.match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-auto w-full grid grid-flow-col grid-rows-2 grid-cols-12 gap-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-flow-row grid-rows-5 row-span-2 gap-4 bg-gray-600 col-span-2 rounded \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" rounded h-min px-16 py-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"profile\",\n          className: \"max-h-full h-20 object-contain bg-cover bg-center mx-auto\",\n          src: user.avatarUrl || icone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold\",\n            children: \"Username :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: user === null || user === void 0 ? void 0 : user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold\",\n            children: \"Email :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-600 col-span-7 rounded p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold pb-4\",\n        children: \"Progression in default series :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: (Array.isArray(stats) ? stats : []).map(s => {\n          const totalchallenges = s.challenges.length;\n          const validChallenges = s.challenges.filter(c => c.completed).length;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg\",\n              children: [\" \", s.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n              completed: Math.round(validChallenges * 100 / totalchallenges),\n              bgColor: \"#3B82F6\",\n              baseBgColor: \"#1F2937\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), validChallenges, \"/\", totalchallenges, \" challenges completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid bg-gray-600 col-span-7 rounded p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold\",\n        children: \"Stats :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), execStats]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full col-span-4 row-span-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold\",\n        children: \"Challenges :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), challenges.length > 0 ? challenges.map((challenge, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-2\",\n        children: /*#__PURE__*/_jsxDEV(ChallengeListitem, {\n          challenge: challenge\n        }, `challenge-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }, this)) : 'This user did not create any challenges.']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"9RS6X6hVgEqSgFBKw6fkDs+tsbk=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/Profile.tsx"],"names":["React","useEffect","useState","toast","Axios","icone","ChallengeListitem","ProgressBar","Profile","props","user","setUser","challenges","setChallenges","stats","setStats","execStats","setExecStats","fetchStats","get","match","params","id","then","data","console","log","content","series","catch","err","isAxiosError","error","response","message","fetchUser","fetchChallenges","avatarUrl","username","email","Array","isArray","map","s","totalchallenges","length","validChallenges","filter","c","completed","name","Math","round","challenge","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Axios from '../axios-config';\nimport icone from '../assets/profile-icon.png';\nimport {\n  ChallengeAttributes,\n  ChallengeListitem,\n} from '../components/ChallengeListItem';\nimport ProgressBar from '@ramonak/react-progress-bar';\n\ntype ProfileAttributes = {\n  _id: string;\n  username: string;\n  email: string;\n  avatarUrl: string;\n};\n\ntype DefaultSerieStats = {\n  _id: string;\n  name: string;\n  challenges: {\n    _id: string;\n    name: string;\n    completed: boolean;\n    bestTime?: number;\n  }[];\n};\n\ntype ExecStats = {\n  successRatio: number;\n  nbExecs: number;\n  nbSucessfullExecs: number;\n  nbValidatedChallenges: number;\n  nbParticipatedChallegnes: number;\n};\n\nexport const Profile = (props: { match: { params: { id: string } } }) => {\n  const [user, setUser] = useState({} as ProfileAttributes);\n  const [challenges, setChallenges] = useState([] as ChallengeAttributes[]);\n  const [stats, setStats] = useState([] as DefaultSerieStats[]);\n  const [execStats, setExecStats] = useState({} as ExecStats);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      Axios.get(`stats/default_series/${props.match.params.id}`)\n        .then(({ data }) => {\n          console.log(data.content);\n          setStats(data.content.series);\n        })\n        .catch((err) => {\n          if (err.isAxiosError) {\n            toast.error(\n              `Could not load series stats: ${err.response.data.message}`,\n            );\n          } else {\n            toast.error(`Could not load series stats: ${err}`);\n          }\n        });\n    };\n\n    const execStats = async () => {\n      Axios.get(`stats/execs/${props.match.params.id}`)\n        .then(({ data }) => {\n          console.log(data.content);\n          setExecStats(data.content.series);\n        })\n        .catch((err) => {\n          if (err.isAxiosError) {\n            toast.error(\n              `Could not load executions stats: ${err.response.data.message}`,\n            );\n          } else {\n            toast.error(`Could not load executions stats: ${err}`);\n          }\n        });\n    };\n\n    const fetchUser = async () => {\n      Axios.get(`/users/${props.match.params.id}`)\n        .then(({ data }) => {\n          setUser(data.content);\n        })\n        .catch((err) => {\n          if (err.isAxiosError) {\n            toast.error(`Could not load profile: ${err.response.data.message}`);\n          } else {\n            toast.error(`Could not load profile: ${err}`);\n          }\n        });\n    };\n\n    execStats();\n    fetchUser();\n    fetchStats();\n  }, [props.match.params.id]);\n\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      Axios.get(`/challenges/user/${props.match.params.id}`)\n        .then(({ data }) => {\n          setChallenges(data.content);\n        })\n        .catch((err) => {\n          if (err.isAxiosError) {\n            toast.error(\n              `Could not load challenges: ${err.response?.data.message}`,\n            );\n          } else {\n            toast.error(`Could not load challenges: ${err}`);\n          }\n        });\n    };\n\n    fetchChallenges();\n  }, [props.match.params.id]);\n\n  return (\n    <div className=\"h-auto w-full grid grid-flow-col grid-rows-2 grid-cols-12 gap-4 p-4\">\n      <div className=\"grid grid-flow-row grid-rows-5 row-span-2 gap-4 bg-gray-600 col-span-2 rounded \">\n        <div className=\" rounded h-min px-16 py-6\">\n          <img\n            alt=\"profile\"\n            className=\"max-h-full h-20 object-contain bg-cover bg-center mx-auto\"\n            src={user.avatarUrl || icone}\n          />\n        </div>\n        <div className=\"\">\n          <div className=\"m-4\">\n            <div className=\"font-bold\">Username :</div>\n            <div className=\"\">{user?.username}</div>\n          </div>\n          <div className=\"m-4\">\n            <div className=\"font-bold\">Email :</div>\n            <div className=\"\">{user?.email}</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-gray-600 col-span-7 rounded p-4\">\n        <div className=\"font-bold pb-4\">Progression in default series :</div>\n        <div className=\"flex flex-col\">\n          {(Array.isArray(stats) ? stats : []).map((s) => {\n            const totalchallenges = s.challenges.length;\n            const validChallenges = s.challenges.filter(\n              (c) => c.completed,\n            ).length;\n            return (\n              <div className=\"\">\n                <div className=\"text-lg\"> {s.name} </div>\n                <ProgressBar\n                  completed={Math.round(\n                    (validChallenges * 100) / totalchallenges,\n                  )}\n                  bgColor=\"#3B82F6\"\n                  baseBgColor=\"#1F2937\"\n                />\n                {validChallenges}/{totalchallenges} challenges completed\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"grid bg-gray-600 col-span-7 rounded p-4\">\n        <div className=\"font-bold\">Stats :</div>\n        {execStats}\n        {/* <ChallengeStat className=\"col-span-12\" attempts={attempts} /> */}\n      </div>\n      <div className=\"flex flex-col w-full col-span-4 row-span-2\">\n        <div className=\"font-bold\">Challenges :</div>\n        {challenges.length > 0\n          ? challenges.map((challenge, index) => (\n              <div className=\"py-2\">\n                <ChallengeListitem\n                  challenge={challenge}\n                  key={`challenge-${index}`}\n                />\n              </div>\n            ))\n          : 'This user did not create any challenges.'}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}