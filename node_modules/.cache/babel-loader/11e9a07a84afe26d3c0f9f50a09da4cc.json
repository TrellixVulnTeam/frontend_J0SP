{"ast":null,"code":"var _jsxFileName = \"/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/CreateSeries.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAuthHeader } from 'react-auth-kit'; // import '../components/style.scss';\n\nimport { useHistory } from 'react-router-dom';\nimport Axios from '../axios-config';\nimport toast from 'react-hot-toast';\nimport { ChallengeListitem } from '../components/SeriesEditChallengeListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateSeries = props => {\n  _s();\n\n  var _props$match3, _props$match3$params;\n\n  const [name, setName] = useState('');\n  const [challenges, setChallenges] = useState([]);\n  const [selectedChallengesIds, setSelectedChallengesIds] = useState([]);\n  const history = useHistory();\n  const getAuthToken = useAuthHeader(); //load existing challenge \\if exists\n\n  useEffect(() => {\n    var _props$match, _props$match$params, _props$match2, _props$match2$params;\n\n    if (!((_props$match = props.match) === null || _props$match === void 0 ? void 0 : (_props$match$params = _props$match.params) === null || _props$match$params === void 0 ? void 0 : _props$match$params.id)) {\n      return;\n    }\n\n    const id = (_props$match2 = props.match) === null || _props$match2 === void 0 ? void 0 : (_props$match2$params = _props$match2.params) === null || _props$match2$params === void 0 ? void 0 : _props$match2$params.id;\n    Axios.get(`/series/${id}`).then(({\n      data\n    }) => {\n      setName(data.content.name);\n      setSelectedChallengesIds(data.content.challenges.map(c => c._id));\n    }).catch(err => {\n      toast.error(`Failed to load serie with id: ${id} \\n ${err}`);\n    });\n  }, [(_props$match3 = props.match) === null || _props$match3 === void 0 ? void 0 : (_props$match3$params = _props$match3.params) === null || _props$match3$params === void 0 ? void 0 : _props$match3$params.id]);\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      Axios.get('/challenges').then(({\n        data\n      }) => {\n        console.log(data.content[0].owner);\n        setChallenges(data.content);\n      }).catch(err => {\n        toast.error(`Could not load challenges: ${err}`);\n      });\n    };\n\n    fetchChallenges();\n  }, []);\n\n  async function updateSeries(challenges, id = (() => {\n    var _props$match4, _props$match4$params;\n\n    return (_props$match4 = props.match) === null || _props$match4 === void 0 ? void 0 : (_props$match4$params = _props$match4.params) === null || _props$match4$params === void 0 ? void 0 : _props$match4$params.id;\n  })() || '') {\n    const toastId = toast.loading('Adding challenges...');\n    Axios.put(`/series`, {\n      _id: id,\n      challenges: challenges.map(c => {\n        return {\n          _id: c\n        };\n      })\n    }, {\n      headers: {\n        Authorization: getAuthToken(),\n        'content-type': 'application/json'\n      }\n    }).then(_ => {\n      toast.success(`Successfully added series ${name}!`, {\n        id: toastId\n      });\n      let url = '/series';\n      history.push(url);\n    }).catch(err => {\n      toast.error(`Could not update series: ${err.response.data.message || 'An unknown error occured'}`, {\n        id: toastId\n      });\n    });\n  }\n\n  async function postSerie() {\n    const toastId = toast.loading('Sending Series...');\n    Axios.post(`/series`, {\n      name\n    }, {\n      headers: {\n        Authorization: getAuthToken(),\n        'content-type': 'application/json'\n      }\n    }).then(({\n      data: {\n        content\n      }\n    }) => {\n      toast.success(`Successfully added series ${name}!`, {\n        id: toastId\n      });\n      const series_id = content._id;\n      updateSeries(selectedChallengesIds, series_id);\n    }).catch(err => {\n      toast.error(`Could not create series: ${err.response.data.message || 'An unknown error occured'}`, {\n        id: toastId\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 gap-4 rounded m-5 p-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-5 bg-pink-900 rounded p-10 pt-8 relative overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-0 right-0 bg-black hover:bg-blue-700 py-2 px-3 rounded-bl-lg text-lg\",\n          onClick: () => {\n            var _props$match5, _props$match5$params;\n\n            return ((_props$match5 = props.match) === null || _props$match5 === void 0 ? void 0 : (_props$match5$params = _props$match5.params) === null || _props$match5$params === void 0 ? void 0 : _props$match5$params.id) ? updateSeries(selectedChallengesIds, props.match.params.id) : postSerie();\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl\",\n          children: \"Create your own challenge serie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 flex flex-col items-start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-start w-auto p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-lg\",\n              htmlFor: \"username\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"text-black rounded-md py-1 px-2\",\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"name\",\n              onChange: e => setName(e.target.value),\n              value: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4 rounded m-5 p-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-auto text-center rounded p-5 flex flex-col items-center col-span-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 m-5\",\n          id: \"listChallenge\",\n          children: [selectedChallengesIds.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"There is no selected challenge.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), challenges.filter(c => selectedChallengesIds.includes(c._id)).map((challenge, index) => /*#__PURE__*/_jsxDEV(ChallengeListitem, {\n            onClick: _id => setSelectedChallengesIds([...selectedChallengesIds.filter(id => id !== _id)]),\n            challenge: challenge,\n            selected: true\n          }, `challenge-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg mb-5\",\n          children: \"Add a challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 m-5\",\n          id: \"listChallenge\",\n          children: [challenges.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"All challenges are selected.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), challenges.filter(c => !selectedChallengesIds.includes(c._id)).map((challenge, index) => /*#__PURE__*/_jsxDEV(ChallengeListitem, {\n            onClick: _id => setSelectedChallengesIds([...selectedChallengesIds, _id]),\n            challenge: challenge\n          }, `challenge-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateSeries, \"0NKC8aBqLXR23FueoBe8y+6j4zo=\", false, function () {\n  return [useHistory, useAuthHeader];\n});\n\n_c = CreateSeries;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSeries\");","map":{"version":3,"sources":["/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/CreateSeries.tsx"],"names":["React","useEffect","useState","useAuthHeader","useHistory","Axios","toast","ChallengeListitem","CreateSeries","props","name","setName","challenges","setChallenges","selectedChallengesIds","setSelectedChallengesIds","history","getAuthToken","match","params","id","get","then","data","content","map","c","_id","catch","err","error","fetchChallenges","console","log","owner","updateSeries","toastId","loading","put","headers","Authorization","_","success","url","push","response","message","postSerie","post","series_id","e","target","value","length","filter","includes","challenge","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,gBAA9B,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,iBAAT,QAAkC,2CAAlC;;;AAGA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAEtB;AAAA;;AAAA;;AACJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,qBAAD,EAAwBC,wBAAxB,IAAoDb,QAAQ,CAChE,EADgE,CAAlE;AAGA,QAAMc,OAAO,GAAGZ,UAAU,EAA1B;AAEA,QAAMa,YAAY,GAAGd,aAAa,EAAlC,CARI,CAUJ;;AACAF,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QAAI,kBAACQ,KAAK,CAACS,KAAP,wEAAC,aAAcC,MAAf,wDAAC,oBAAuBC,EAAxB,CAAJ,EAAgC;AAC9B;AACD;;AACD,UAAMA,EAAE,oBAAGX,KAAK,CAACS,KAAT,0EAAG,cAAcC,MAAjB,yDAAG,qBAAuBC,EAAlC;AAEAf,IAAAA,KAAK,CAACgB,GAAN,CAAW,WAAUD,EAAG,EAAxB,EACGE,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClBZ,MAAAA,OAAO,CAACY,IAAI,CAACC,OAAL,CAAad,IAAd,CAAP;AACAK,MAAAA,wBAAwB,CACtBQ,IAAI,CAACC,OAAL,CAAaZ,UAAb,CAAwBa,GAAxB,CAA6BC,CAAD,IAAwBA,CAAC,CAACC,GAAtD,CADsB,CAAxB;AAGD,KANH,EAOGC,KAPH,CAOUC,GAAD,IAAS;AACdvB,MAAAA,KAAK,CAACwB,KAAN,CAAa,iCAAgCV,EAAG,OAAMS,GAAI,EAA1D;AACD,KATH;AAUD,GAhBQ,EAgBN,kBAACpB,KAAK,CAACS,KAAP,0EAAC,cAAcC,MAAf,yDAAC,qBAAuBC,EAAxB,CAhBM,CAAT;AAkBAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM8B,eAAe,GAAG,YAAY;AAClC1B,MAAAA,KAAK,CAACgB,GAAN,CAAU,aAAV,EACGC,IADH,CACQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAClBS,QAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBU,KAA5B;AACArB,QAAAA,aAAa,CAACU,IAAI,CAACC,OAAN,CAAb;AACD,OAJH,EAKGI,KALH,CAKUC,GAAD,IAAS;AACdvB,QAAAA,KAAK,CAACwB,KAAN,CAAa,8BAA6BD,GAAI,EAA9C;AACD,OAPH;AAQD,KATD;;AAWAE,IAAAA,eAAe;AAChB,GAbQ,EAaN,EAbM,CAAT;;AAeA,iBAAeI,YAAf,CACEvB,UADF,EAEEQ,EAAU,GAAG;AAAA;;AAAA,4BAAAX,KAAK,CAACS,KAAN,wFAAcC,MAAd,8EAAuBC,EAAvB;AAAA,UAA6B,EAF5C,EAGE;AACA,UAAMgB,OAAO,GAAG9B,KAAK,CAAC+B,OAAN,CAAc,sBAAd,CAAhB;AACAhC,IAAAA,KAAK,CAACiC,GAAN,CACG,SADH,EAEE;AACEX,MAAAA,GAAG,EAAEP,EADP;AAEER,MAAAA,UAAU,EAAEA,UAAU,CAACa,GAAX,CAAgBC,CAAD,IAAO;AAChC,eAAO;AAAEC,UAAAA,GAAG,EAAED;AAAP,SAAP;AACD,OAFW;AAFd,KAFF,EAQE;AACEa,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEvB,YAAY,EADpB;AAEP,wBAAgB;AAFT;AADX,KARF,EAeGK,IAfH,CAeSmB,CAAD,IAAO;AACXnC,MAAAA,KAAK,CAACoC,OAAN,CAAe,6BAA4BhC,IAAK,GAAhD,EAAoD;AAClDU,QAAAA,EAAE,EAAEgB;AAD8C,OAApD;AAGA,UAAIO,GAAG,GAAG,SAAV;AACA3B,MAAAA,OAAO,CAAC4B,IAAR,CAAaD,GAAb;AACD,KArBH,EAsBGf,KAtBH,CAsBUC,GAAD,IAAS;AACdvB,MAAAA,KAAK,CAACwB,KAAN,CACG,4BACDD,GAAG,CAACgB,QAAJ,CAAatB,IAAb,CAAkBuB,OAAlB,IAA6B,0BAC5B,EAHH,EAIE;AAAE1B,QAAAA,EAAE,EAAEgB;AAAN,OAJF;AAMD,KA7BH;AA8BD;;AAED,iBAAeW,SAAf,GAA2B;AACzB,UAAMX,OAAO,GAAG9B,KAAK,CAAC+B,OAAN,CAAc,mBAAd,CAAhB;AACAhC,IAAAA,KAAK,CAAC2C,IAAN,CACG,SADH,EAEE;AAAEtC,MAAAA;AAAF,KAFF,EAGE;AACE6B,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEvB,YAAY,EADpB;AAEP,wBAAgB;AAFT;AADX,KAHF,EAUGK,IAVH,CAUQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,KAAD,KAA2B;AAC/BlB,MAAAA,KAAK,CAACoC,OAAN,CAAe,6BAA4BhC,IAAK,GAAhD,EAAoD;AAClDU,QAAAA,EAAE,EAAEgB;AAD8C,OAApD;AAGA,YAAMa,SAAS,GAAGzB,OAAO,CAACG,GAA1B;AACAQ,MAAAA,YAAY,CAACrB,qBAAD,EAAwBmC,SAAxB,CAAZ;AACD,KAhBH,EAiBGrB,KAjBH,CAiBUC,GAAD,IAAS;AACdvB,MAAAA,KAAK,CAACwB,KAAN,CACG,4BACDD,GAAG,CAACgB,QAAJ,CAAatB,IAAb,CAAkBuB,OAAlB,IAA6B,0BAC5B,EAHH,EAIE;AAAE1B,QAAAA,EAAE,EAAEgB;AAAN,OAJF;AAMD,KAxBH;AAyBD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,mEAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,mFADZ;AAEE,UAAA,OAAO,EAAE;AAAA;;AAAA,mBACP,kBAAA3B,KAAK,CAACS,KAAN,wFAAcC,MAAd,8EAAuBC,EAAvB,IACIe,YAAY,CAACrB,qBAAD,EAAwBL,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,EAA3C,CADhB,GAEI2B,SAAS,EAHN;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,sCAAf;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,SAAjB;AAA2B,cAAA,OAAO,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AACE,cAAA,SAAS,EAAC,iCADZ;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,WAAW,EAAC,MAJd;AAKE,cAAA,QAAQ,EAAGG,CAAD,IAAOvC,OAAO,CAACuC,CAAC,CAACC,MAAF,CAASC,KAAV,CAL1B;AAME,cAAA,KAAK,EAAE1C;AANT;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAgCE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sEAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAA4C,UAAA,EAAE,EAAC,eAA/C;AAAA,qBACGI,qBAAqB,CAACuC,MAAtB,KAAiC,CAAjC,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIGzC,UAAU,CACR0C,MADF,CACU5B,CAAD,IAAOZ,qBAAqB,CAACyC,QAAtB,CAA+B7B,CAAC,CAACC,GAAjC,CADhB,EAEEF,GAFF,CAEM,CAAC+B,SAAD,EAAYC,KAAZ,kBACH,QAAC,iBAAD;AACE,YAAA,OAAO,EAAG9B,GAAD,IACPZ,wBAAwB,CAAC,CACvB,GAAGD,qBAAqB,CAACwC,MAAtB,CAA8BlC,EAAD,IAAQA,EAAE,KAAKO,GAA5C,CADoB,CAAD,CAF5B;AAME,YAAA,SAAS,EAAE6B,SANb;AAQE,YAAA,QAAQ;AARV,aAOQ,aAAYC,KAAM,EAP1B;AAAA;AAAA;AAAA;AAAA,kBAHH,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,eAqBE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAA4C,UAAA,EAAE,EAAC,eAA/C;AAAA,qBACG7C,UAAU,CAACyC,MAAX,KAAsB,CAAtB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIGzC,UAAU,CACR0C,MADF,CACU5B,CAAD,IAAO,CAACZ,qBAAqB,CAACyC,QAAtB,CAA+B7B,CAAC,CAACC,GAAjC,CADjB,EAEEF,GAFF,CAEM,CAAC+B,SAAD,EAAYC,KAAZ,kBACH,QAAC,iBAAD;AACE,YAAA,OAAO,EAAG9B,GAAD,IACPZ,wBAAwB,CAAC,CAAC,GAAGD,qBAAJ,EAA2Ba,GAA3B,CAAD,CAF5B;AAIE,YAAA,SAAS,EAAE6B;AAJb,aAKQ,aAAYC,KAAM,EAL1B;AAAA;AAAA;AAAA;AAAA,kBAHH,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA,kBADF;AA2ED,CA3LM;;GAAMjD,Y;UAQKJ,U,EAEKD,a;;;KAVVK,Y","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAuthHeader } from 'react-auth-kit';\n// import '../components/style.scss';\nimport { useHistory } from 'react-router-dom';\nimport Axios from '../axios-config';\nimport toast from 'react-hot-toast';\nimport { ChallengeListitem } from '../components/SeriesEditChallengeListItem';\nimport { ChallengeAttributes } from '../components/ChallengeListItem';\n\nexport const CreateSeries = (props: {\n  match?: { params?: { id?: string } };\n}) => {\n  const [name, setName] = useState('');\n  const [challenges, setChallenges] = useState([] as ChallengeAttributes[]);\n  const [selectedChallengesIds, setSelectedChallengesIds] = useState(\n    [] as string[],\n  );\n  const history = useHistory();\n\n  const getAuthToken = useAuthHeader();\n\n  //load existing challenge \\if exists\n  useEffect(() => {\n    if (!props.match ?.params ?.id) {\n      return;\n    }\n    const id = props.match ?.params ?.id;\n\n    Axios.get(`/series/${id}`)\n      .then(({ data }) => {\n        setName(data.content.name);\n        setSelectedChallengesIds(\n          data.content.challenges.map((c: { _id: string }) => c._id),\n        );\n      })\n      .catch((err) => {\n        toast.error(`Failed to load serie with id: ${id} \\n ${err}`);\n      });\n  }, [props.match ?.params ?.id]);\n\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      Axios.get('/challenges')\n        .then(({ data }) => {\n          console.log(data.content[0].owner);\n          setChallenges(data.content);\n        })\n        .catch((err) => {\n          toast.error(`Could not load challenges: ${err}`);\n        });\n    };\n\n    fetchChallenges();\n  }, []);\n\n  async function updateSeries(\n    challenges: string[],\n    id: string = props.match ?.params ?.id || '',\n  ) {\n    const toastId = toast.loading('Adding challenges...');\n    Axios.put(\n      `/series`,\n      {\n        _id: id,\n        challenges: challenges.map((c) => {\n          return { _id: c };\n        }),\n      },\n      {\n        headers: {\n          Authorization: getAuthToken(),\n          'content-type': 'application/json',\n        },\n      },\n    )\n      .then((_) => {\n        toast.success(`Successfully added series ${name}!`, {\n          id: toastId,\n        });\n        let url = '/series';\n        history.push(url);\n      })\n      .catch((err) => {\n        toast.error(\n          `Could not update series: ${\n          err.response.data.message || 'An unknown error occured'\n          }`,\n          { id: toastId },\n        );\n      });\n  }\n\n  async function postSerie() {\n    const toastId = toast.loading('Sending Series...');\n    Axios.post(\n      `/series`,\n      { name },\n      {\n        headers: {\n          Authorization: getAuthToken(),\n          'content-type': 'application/json',\n        },\n      },\n    )\n      .then(({ data: { content } }) => {\n        toast.success(`Successfully added series ${name}!`, {\n          id: toastId,\n        });\n        const series_id = content._id;\n        updateSeries(selectedChallengesIds, series_id);\n      })\n      .catch((err) => {\n        toast.error(\n          `Could not create series: ${\n          err.response.data.message || 'An unknown error occured'\n          }`,\n          { id: toastId },\n        );\n      });\n  }\n\n  return (\n    <>\n      <div className=\"grid grid-cols-5 gap-4 rounded m-5 p-10\">\n        <div className=\"col-span-5 bg-pink-900 rounded p-10 pt-8 relative overflow-hidden\">\n          <button\n            className=\"absolute top-0 right-0 bg-black hover:bg-blue-700 py-2 px-3 rounded-bl-lg text-lg\"\n            onClick={() =>\n              props.match ?.params ?.id\n                ? updateSeries(selectedChallengesIds, props.match.params.id)\n                : postSerie()\n            }\n          >\n            Save\n          </button>\n          <h1 className=\"text-3xl\">Create your own challenge serie</h1>\n          <div className=\"mt-2 flex flex-col items-start\">\n            <div className=\"flex flex-col items-start w-auto p-4\">\n              <label className=\"text-lg\" htmlFor=\"username\">\n                Name\n              </label>\n              <input\n                className=\"text-black rounded-md py-1 px-2\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"name\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4 rounded m-5 p-10\">\n        <div className=\"h-auto text-center rounded p-5 flex flex-col items-center col-span-2\">\n          <div className=\"grid grid-cols-3 gap-4 m-5\" id=\"listChallenge\">\n            {selectedChallengesIds.length === 0 && (\n              <span>There is no selected challenge.</span>\n            )}\n            {challenges\n              .filter((c) => selectedChallengesIds.includes(c._id))\n              .map((challenge, index) => (\n                <ChallengeListitem\n                  onClick={(_id) =>\n                    setSelectedChallengesIds([\n                      ...selectedChallengesIds.filter((id) => id !== _id),\n                    ])\n                  }\n                  challenge={challenge}\n                  key={`challenge-${index}`}\n                  selected\n                />\n              ))}\n          </div>\n          <h2 className=\"text-lg mb-5\">Add a challenge</h2>\n          <div className=\"grid grid-cols-3 gap-4 m-5\" id=\"listChallenge\">\n            {challenges.length === 0 && (\n              <span>All challenges are selected.</span>\n            )}\n            {challenges\n              .filter((c) => !selectedChallengesIds.includes(c._id))\n              .map((challenge, index) => (\n                <ChallengeListitem\n                  onClick={(_id) =>\n                    setSelectedChallengesIds([...selectedChallengesIds, _id])\n                  }\n                  challenge={challenge}\n                  key={`challenge-${index}`}\n                />\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}