{"ast":null,"code":"var _jsxFileName = \"/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/ChallengesForSerie.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Axios from '../axios-config';\nimport { ChallengeListitem } from '../components/ChallengeForSeriesComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChallengesForSeries = props => {\n  _s();\n\n  var _props$match2, _props$match2$params;\n\n  const [challenges, setChallenges] = useState([]);\n  const [seriesName, setSeriesName] = useState('');\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      var _props$match, _props$match$params;\n\n      Axios.get(`/series/${(_props$match = props.match) === null || _props$match === void 0 ? void 0 : (_props$match$params = _props$match.params) === null || _props$match$params === void 0 ? void 0 : _props$match$params.id}`).then(({\n        data\n      }) => {\n        console.log(data.content);\n        setChallenges(data.content.challenges);\n        setSeriesName(data.content.name);\n      }).catch(err => {\n        if (err.isAxiosError) {\n          var _err$response;\n\n          toast.error(`Could not load challegnes: ${(_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data.message}`);\n        } else {\n          toast.error(`Could not load challegnes: ${err}`);\n        }\n      });\n    };\n\n    fetchChallenges();\n  }, [(_props$match2 = props.match) === null || _props$match2 === void 0 ? void 0 : (_props$match2$params = _props$match2.params) === null || _props$match2$params === void 0 ? void 0 : _props$match2$params.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4 m-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-3 text-lg rounded bg-pink-900 p-4\",\n        children: seriesName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), challenges.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Nothing to show here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }, this), challenges.map((challenge, index) => /*#__PURE__*/_jsxDEV(ChallengeListitem, {\n        challenge: challenge\n      }, `challenge-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChallengesForSeries, \"q6moP2smtc+PWFP1keC4Rh0bWek=\");\n\n_c = ChallengesForSeries;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesForSeries\");","map":{"version":3,"sources":["/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/ChallengesForSerie.tsx"],"names":["React","useEffect","useState","toast","Axios","ChallengeListitem","ChallengesForSeries","props","challenges","setChallenges","seriesName","setSeriesName","fetchChallenges","get","match","params","id","then","data","console","log","content","name","catch","err","isAxiosError","error","response","message","length","map","challenge","index"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,iBAAT,QAAkC,2CAAlC;;;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAE7B;AAAA;;AAAA;;AACJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,eAAe,GAAG,YAAY;AAAA;;AAClCR,MAAAA,KAAK,CAACS,GAAN,CAAW,WAAD,gBAAWN,KAAK,CAACO,KAAjB,wEAAW,aAAcC,MAAzB,wDAAW,oBAAuBC,EAAG,EAA/C,EACGC,IADH,CACQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;AACAZ,QAAAA,aAAa,CAACS,IAAI,CAACG,OAAL,CAAab,UAAd,CAAb;AACAG,QAAAA,aAAa,CAACO,IAAI,CAACG,OAAL,CAAaC,IAAd,CAAb;AACD,OALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACd,YAAIA,GAAG,CAACC,YAAR,EAAsB;AAAA;;AACpBtB,UAAAA,KAAK,CAACuB,KAAN,CACG,8BAAD,iBAA8BF,GAAG,CAACG,QAAlC,kDAA8B,cAAeT,IAAf,CAAoBU,OAAQ,EAD5D;AAGD,SAJD,MAIO;AACLzB,UAAAA,KAAK,CAACuB,KAAN,CAAa,8BAA6BF,GAAI,EAA9C;AACD;AACF,OAdH;AAeD,KAhBD;;AAkBAZ,IAAAA,eAAe;AAChB,GApBQ,EAoBN,kBAACL,KAAK,CAACO,KAAP,0EAAC,cAAcC,MAAf,yDAAC,qBAAuBC,EAAxB,CApBM,CAAT;AAsBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA,kBACGN;AADH;AAAA;AAAA;AAAA;AAAA,cADF,EAIGF,UAAU,CAACqB,MAAX,KAAsB,CAAtB,iBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJ9B,EAKGrB,UAAU,CAACsB,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,kBACd,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAED;AAA9B,SAA+C,aAAYC,KAAM,EAAjE;AAAA;AAAA;AAAA;AAAA,cADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD,CAzCM;;GAAM1B,mB;;KAAAA,mB","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Axios from '../axios-config';\nimport { ChallengeListitem } from '../components/ChallengeForSeriesComponent';\n\nexport const ChallengesForSeries = (props: {\n  match?: { params?: { id?: string } };\n}) => {\n  const [challenges, setChallenges] = useState([]);\n  const [seriesName, setSeriesName] = useState('');\n\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      Axios.get(`/series/${props.match ?.params ?.id}`)\n        .then(({ data }) => {\n          console.log(data.content)\n          setChallenges(data.content.challenges);\n          setSeriesName(data.content.name);\n        })\n        .catch((err) => {\n          if (err.isAxiosError) {\n            toast.error(\n              `Could not load challegnes: ${err.response ?.data.message}`,\n            );\n          } else {\n            toast.error(`Could not load challegnes: ${err}`);\n          }\n        });\n    };\n\n    fetchChallenges();\n  }, [props.match ?.params ?.id]);\n\n  return (\n    <>\n      <div className=\"grid grid-cols-3 gap-4 m-5\">\n        <div className=\"col-span-3 text-lg rounded bg-pink-900 p-4\">\n          {seriesName}\n        </div>\n        {challenges.length === 0 && <span>Nothing to show here.</span>}\n        {challenges.map((challenge, index) => (\n          <ChallengeListitem challenge={challenge} key={`challenge-${index}`} />\n        ))}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}