{"ast":null,"code":"var _jsxFileName = \"/home/imane/Documents/M1/S2/Projet annuel/frontend/src/components/RegisterForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport loginImg from \"../assets/login.svg\";\nimport { useState } from 'react';\nimport Axios from '../axios-config';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterForm = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function createUser() {\n    const toastId = toast.loading('Creating user...');\n    Axios.post('/users', {\n      username,\n      email,\n      password\n    }).then(({\n      data\n    }) => {\n      toast.success('User created !', {\n        id: toastId\n      });\n      window.location.reload();\n    }).catch(({\n      response: {\n        data: {\n          message\n        }\n      }\n    }) => {\n      toast.error(`Could not register: ${message}`, {\n        id: toastId\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"login\",\n          src: loginImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"text\",\n            placeholder: \"username\",\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"text\",\n            placeholder: \"email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"password\",\n            placeholder: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"bg-blue-500 rounded-lg px-6 py-2\",\n        onClick: _ => createUser(),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"tRYla3vCO/TiaNXVkXSQty2VxO8=\");\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/home/imane/Documents/M1/S2/Projet annuel/frontend/src/components/RegisterForm.tsx"],"names":["React","useState","Axios","toast","RegisterForm","username","setUsername","email","setEmail","password","setPassword","createUser","toastId","loading","post","then","data","success","id","window","location","reload","catch","response","message","error","loginImg","e","target","value","_"],"mappings":"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","sourcesContent":["import React from 'react';\nimport loginImg from '../assets/login.svg';\nimport { useState } from 'react';\nimport Axios from '../axios-config';\nimport toast from 'react-hot-toast';\n\nexport const RegisterForm = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  function createUser() {\n    const toastId = toast.loading('Creating user...');\n    Axios.post('/users', { username, email, password })\n      .then(({ data }) => {\n        toast.success('User created !', { id: toastId });\n        window.location.reload();\n      })\n      .catch(\n        ({\n          response: {\n            data: { message },\n          },\n        }) => {\n          toast.error(`Could not register: ${message}`, { id: toastId });\n        },\n      );\n  }\n\n  return (\n    <div className=\"base-container\">\n      <div className=\"header\">Register</div>\n      <div className=\"content\">\n        <div className=\"image\">\n          <img alt=\"login\" src={loginImg} />\n        </div>\n        <div className=\"form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              className=\"text-black\"\n              type=\"text\"\n              placeholder=\"username\"\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              className=\"text-black\"\n              type=\"text\"\n              placeholder=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              className=\"text-black\"\n              type=\"password\"\n              placeholder=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <button\n          type=\"button\"\n          className=\"bg-blue-500 rounded-lg px-6 py-2\"\n          onClick={(_) => createUser()}\n        >\n          Register\n        </button>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}