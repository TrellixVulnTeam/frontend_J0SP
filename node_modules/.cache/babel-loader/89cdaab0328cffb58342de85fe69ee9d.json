{"ast":null,"code":"var _jsxFileName = \"/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/ModifyProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Axios from '../axios-config'; // import { ChallengeListitem } from '../components/ChallengeListItem';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Profile = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  async function login() {\n    const toastId = toast.loading('Creating user...');\n    Axios.post('/auth/login', {\n      username,\n      password\n    }).then(({\n      data: {\n        content: {\n          access_token\n        }\n      }\n    }) => {\n      // const header: { alg: string, typ: string } = JSON.parse(atob(access_token.split('.')[0]))\n      const userInfo = JSON.parse(atob(access_token.split('.')[1]));\n      console.log(userInfo);\n\n      if (signIn({\n        token: access_token,\n        expiresIn: 30,\n        tokenType: 'Bearer',\n        authState: userInfo\n      })) {\n        setRedirect(true);\n        toast.success(`Logged in successfuly as ${username} !`, {\n          id: toastId\n        });\n      } else {\n        throw new Error('Could not login.');\n      }\n    }).catch(err => {\n      if (err.isAxiosError) {\n        toast.error(`Could not login: ${err.response.data.message}`, {\n          id: toastId\n        });\n      } else {\n        toast.error(`Could not login: ${err}`, {\n          id: toastId\n        });\n      }\n    });\n  }\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Login\",\n          src: loginImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"username\",\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => login(),\n        type: \"button\",\n        className: \"bg-blue-500 rounded-lg px-6 py-2\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"akJCtea06E3X9APQvCKcOXGIZ6s=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/ModifyProfile.tsx"],"names":["React","useState","toast","Axios","Profile","username","setUsername","password","setPassword","redirect","setRedirect","login","toastId","loading","post","then","data","content","access_token","userInfo","JSON","parse","atob","split","console","log","signIn","token","expiresIn","tokenType","authState","success","id","Error","catch","err","isAxiosError","error","response","message","loginImg","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CACA;;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;;AAEA,iBAAeU,KAAf,GAAuB;AACrB,UAAMC,OAAO,GAAGV,KAAK,CAACW,OAAN,CAAc,kBAAd,CAAhB;AACAV,IAAAA,KAAK,CAACW,IAAN,CAAW,aAAX,EAA0B;AAAET,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAA1B,EACCQ,IADD,CAEE,CAAC;AACCC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE;AAAEC,UAAAA;AAAF;AADL;AADP,KAAD,KAIM;AACJ;AACA,YAAMC,QAAwD,GAC9DC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACJ,YAAY,CAACK,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAD,CAAf,CADA;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AACA,UACEO,MAAM,CAAC;AACLC,QAAAA,KAAK,EAAET,YADF;AAELU,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,SAAS,EAAE,QAHN;AAILC,QAAAA,SAAS,EAAEX;AAJN,OAAD,CADR,EAOE;AACAT,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAR,QAAAA,KAAK,CAAC6B,OAAN,CAAe,4BAA2B1B,QAAS,IAAnD,EAAwD;AACtD2B,UAAAA,EAAE,EAAEpB;AADkD,SAAxD;AAGD,OAZD,MAYO;AACL,cAAM,IAAIqB,KAAJ,CAAU,kBAAV,CAAN;AACD;AACF,KA1BH,EA4BCC,KA5BD,CA4BQC,GAAD,IAAS;AACd,UAAIA,GAAG,CAACC,YAAR,EAAsB;AACpBlC,QAAAA,KAAK,CAACmC,KAAN,CAAa,oBAAmBF,GAAG,CAACG,QAAJ,CAAatB,IAAb,CAAkBuB,OAAQ,EAA1D,EAA6D;AAC3DP,UAAAA,EAAE,EAAEpB;AADuD,SAA7D;AAGD,OAJD,MAIO;AACLV,QAAAA,KAAK,CAACmC,KAAN,CAAa,oBAAmBF,GAAI,EAApC,EAAuC;AAAEH,UAAAA,EAAE,EAAEpB;AAAN,SAAvC;AACD;AACF,KApCD;AAqCD;;AAED,MAAIH,QAAJ,EAAc;AACZ,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACA;AAAK,UAAA,GAAG,EAAC,OAAT;AAAiB,UAAA,GAAG,EAAE+B;AAAtB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AACA,YAAA,SAAS,EAAC,YADV;AAEA,YAAA,IAAI,EAAC,MAFL;AAGA,YAAA,IAAI,EAAC,UAHL;AAIA,YAAA,WAAW,EAAC,UAJZ;AAKA,YAAA,QAAQ,EAAGC,CAAD,IAAOnC,WAAW,CAACmC,CAAC,CAACC,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAWA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AACA,YAAA,SAAS,EAAC,YADV;AAEA,YAAA,IAAI,EAAC,UAFL;AAGA,YAAA,IAAI,EAAC,UAHL;AAIA,YAAA,WAAW,EAAC,UAJZ;AAKA,YAAA,QAAQ,EAAGF,CAAD,IAAOjC,WAAW,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eA6BA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BAEA;AACA,QAAA,OAAO,EAAGF,CAAD,IAAO9B,KAAK,EADrB;AAEA,QAAA,IAAI,EAAC,QAFL;AAGA,QAAA,SAAS,EAAC,kCAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YA7BA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA7FM;;GAAMP,O;;KAAAA,O","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Axios from '../axios-config';\n// import { ChallengeListitem } from '../components/ChallengeListItem';\n\nexport const Profile = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  async function login() {\n    const toastId = toast.loading('Creating user...');\n    Axios.post('/auth/login', { username, password })\n    .then(\n      ({\n        data: {\n          content: { access_token },\n        },\n      }) => {\n        // const header: { alg: string, typ: string } = JSON.parse(atob(access_token.split('.')[0]))\n        const userInfo: { username: string; sub: string; iat: number } =\n        JSON.parse(atob(access_token.split('.')[1]));\n        console.log(userInfo);\n        if (\n          signIn({\n            token: access_token,\n            expiresIn: 30,\n            tokenType: 'Bearer',\n            authState: userInfo,\n          })\n        ) {\n          setRedirect(true);\n          toast.success(`Logged in successfuly as ${username} !`, {\n            id: toastId,\n          });\n        } else {\n          throw new Error('Could not login.');\n        }\n      },\n    )\n    .catch((err) => {\n      if (err.isAxiosError) {\n        toast.error(`Could not login: ${err.response.data.message}`, {\n          id: toastId,\n        });\n      } else {\n        toast.error(`Could not login: ${err}`, { id: toastId });\n      }\n    });\n  }\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"base-container\">\n    <div className=\"header\">Login</div>\n    <div className=\"content\">\n    <div className=\"image\">\n    <img alt=\"Login\" src={loginImg} />\n    </div>\n    <div className=\"form\">\n    <div className=\"form-group\">\n    <label htmlFor=\"username\">Username</label>\n    <input\n    className=\"text-black\"\n    type=\"text\"\n    name=\"username\"\n    placeholder=\"username\"\n    onChange={(e) => setUsername(e.target.value)}\n    />\n    </div>\n    <div className=\"form-group\">\n    <label htmlFor=\"password\">Password</label>\n    <input\n    className=\"text-black\"\n    type=\"password\"\n    name=\"password\"\n    placeholder=\"password\"\n    onChange={(e) => setPassword(e.target.value)}\n    />\n    </div>\n    </div>\n    </div>\n    <div className=\"footer\">\n    {/* <Link to=\"/\" className=\"nav-links\"> */}\n    <button\n    onClick={(e) => login()}\n    type=\"button\"\n    className=\"bg-blue-500 rounded-lg px-6 py-2\"\n    >\n    Login\n    </button>\n    {/* </Link> */}\n    </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}