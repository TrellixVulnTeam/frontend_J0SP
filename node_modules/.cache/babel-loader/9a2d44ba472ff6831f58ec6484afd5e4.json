{"ast":null,"code":"var _jsxFileName = \"/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/ChallengeListPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Axios from '../axios-config';\nimport { ChallengeListitem } from '../components/ChallengeListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChallengeListPage = () => {\n  _s();\n\n  const [challenges, setChallenges] = useState([]);\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      Axios.get('/challenges').then(({\n        data\n      }) => {\n        setChallenges(data.content);\n      }).catch(err => {\n        if (err.isAxiosError) {\n          var _err$response;\n\n          toast.error(`Could not load challenges: ${(_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data.message}`);\n        } else {\n          toast.error(`Could not load challenges: ${err}`);\n        }\n      });\n    };\n\n    fetchChallenges();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4 m-5\",\n      children: [challenges.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Nothing to show here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 37\n      }, this), challenges.map((challenge, index) => /*#__PURE__*/_jsxDEV(ChallengeListitem, {\n        challenge: challenge\n      }, `challenge-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChallengeListPage, \"6Ez78TAPRFpbi3Q2gTmm3CmSk8E=\");\n\n_c = ChallengeListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeListPage\");","map":{"version":3,"sources":["/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/ChallengeListPage.tsx"],"names":["React","useEffect","useState","toast","Axios","ChallengeListitem","ChallengeListPage","challenges","setChallenges","fetchChallenges","get","then","data","content","catch","err","isAxiosError","error","response","message","length","map","challenge","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACrC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,eAAe,GAAG,YAAY;AAClCL,MAAAA,KAAK,CAACM,GAAN,CAAU,aAAV,EACGC,IADH,CACQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAClBJ,QAAAA,aAAa,CAACI,IAAI,CAACC,OAAN,CAAb;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACd,YAAIA,GAAG,CAACC,YAAR,EAAsB;AAAA;;AACpBb,UAAAA,KAAK,CAACc,KAAN,CACG,8BAAD,iBAA8BF,GAAG,CAACG,QAAlC,kDAA8B,cAAcN,IAAd,CAAmBO,OAAQ,EAD3D;AAGD,SAJD,MAIO;AACLhB,UAAAA,KAAK,CAACc,KAAN,CAAa,8BAA6BF,GAAI,EAA9C;AACD;AACF,OAZH;AAaD,KAdD;;AAgBAN,IAAAA,eAAe;AAChB,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,iBACGF,UAAU,CAACa,MAAX,KAAsB,CAAtB,iBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD9B,EAEGb,UAAU,CAACc,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,kBACd,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAED;AAA9B,SAA+C,aAAYC,KAAM,EAAjE;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CAjCM;;GAAMjB,iB;;KAAAA,iB","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Axios from '../axios-config';\nimport { ChallengeListitem } from '../components/ChallengeListItem';\n\nexport const ChallengeListPage = () => {\n  const [challenges, setChallenges] = useState([]);\n\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      Axios.get('/challenges')\n        .then(({ data }) => {\n          setChallenges(data.content);\n        })\n        .catch((err) => {\n          if (err.isAxiosError) {\n            toast.error(\n              `Could not load challenges: ${err.response?.data.message}`,\n            );\n          } else {\n            toast.error(`Could not load challenges: ${err}`);\n          }\n        });\n    };\n\n    fetchChallenges();\n  }, []);\n\n  return (\n    <>\n      <div className=\"grid grid-cols-3 gap-4 m-5\">\n        {challenges.length === 0 && <span>Nothing to show here.</span>}\n        {challenges.map((challenge, index) => (\n          <ChallengeListitem challenge={challenge} key={`challenge-${index}`} />\n        ))}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}