{"ast":null,"code":"var _jsxFileName = \"/home/imane/Documents/M1/S2/Projet annuel/frontend/src/components/RegisterForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Axios from '../axios-config';\nimport toast from 'react-hot-toast';\nimport picspyLogo from '../assets/PicSpyLogo.png';\nimport icone from '../assets/profile-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterForm = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [image, setImage] = useState(undefined);\n\n  function createUser() {\n    const toastId = toast.loading('Creating user...');\n\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match.', {\n        id: toastId\n      });\n      return;\n    }\n\n    const params = new FormData();\n    email && params.append('username', username);\n    image && params.append('email', email);\n    image && params.append('password', password);\n    image && params.append('avatar', image);\n    Axios.post('/users', params, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(_ => {\n      toast.success('User created !', {\n        id: toastId\n      });\n      window.location.reload();\n    }).catch(({\n      response: {\n        data: {\n          message\n        }\n      }\n    }) => {\n      toast.error(`Could not register: ${message}`, {\n        id: toastId\n      });\n    });\n  }\n\n  function onFileChange(e) {\n    var _e$target$files;\n\n    let file = image;\n\n    if (e.target.files && ((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files.length) > 0) {\n      file = e.target.files[0];\n    }\n\n    setImage(file);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image h-32\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"object-contain\",\n          alt: \"login\",\n          src: picspyLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header text-center\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"text\",\n            placeholder: \"username\",\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"profile\",\n          className: \"max-h-full h-20 object-contain bg-cover bg-center mx-auto\",\n          src: image && URL.createObjectURL(image) || icone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-center mb-8\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"w-32 flex flex-col items-center p-5 bg-blue-500 hover:bg-blue-700 rounded-md shadow-md tracking-wide cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-cloud-upload-alt fa-2x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mt-2 text-base \",\n            children: \"Browse for an avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"hidden\",\n            accept: \"image/*\",\n            onChange: onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"text\",\n            placeholder: \"email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"password\",\n            placeholder: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Confirm password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-black\",\n            type: \"password\",\n            placeholder: \"confirm-password\",\n            onChange: e => setConfirmPassword(e.target.value),\n            onKeyPress: event => {\n              if (event.key === 'Enter') {\n                createUser();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"bg-blue-500 rounded-lg px-6 py-2\",\n        onClick: _ => createUser(),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"BhSi6Sk+L1Cps4+Z9NPFtnoJAgs=\");\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/home/imane/Documents/M1/S2/Projet annuel/frontend/src/components/RegisterForm.tsx"],"names":["React","useState","Axios","toast","picspyLogo","icone","RegisterForm","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","image","setImage","undefined","createUser","toastId","loading","error","id","params","FormData","append","post","headers","then","_","success","window","location","reload","catch","response","data","message","onFileChange","e","file","target","files","length","value","URL","createObjectURL","event","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport Axios from '../axios-config';\nimport toast from 'react-hot-toast';\nimport picspyLogo from '../assets/PicSpyLogo.png';\nimport icone from '../assets/profile-icon.png';\n\nexport const RegisterForm = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [image, setImage] = useState(undefined as unknown as File);\n\n  function createUser() {\n    const toastId = toast.loading('Creating user...');\n\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match.', { id: toastId });\n      return;\n    }\n\n    const params = new FormData();\n    email && params.append('username', username);\n    image && params.append('email', email);\n    image && params.append('password', password);\n    image && params.append('avatar', image);\n\n    Axios.post('/users', params, {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    })\n      .then((_) => {\n        toast.success('User created !', { id: toastId });\n        window.location.reload();\n      })\n      .catch(\n        ({\n          response: {\n            data: { message },\n          },\n        }) => {\n          toast.error(`Could not register: ${message}`, { id: toastId });\n        },\n      );\n  }\n\n  function onFileChange(e: React.ChangeEvent<HTMLInputElement>) {\n    let file = image;\n\n    if (e.target.files && e.target.files?.length > 0) {\n      file = e.target.files[0];\n    }\n\n    setImage(file);\n  }\n\n  return (\n    <div className=\"base-container\">\n      <div className=\"content\">\n        <div className=\"image h-32\">\n          <img className=\"object-contain\" alt=\"login\" src={picspyLogo} />\n        </div>\n        <div className=\"header text-center\">Register</div>\n        <div className=\"form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              className=\"text-black\"\n              type=\"text\"\n              placeholder=\"username\"\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <img\n            alt=\"profile\"\n            className=\"max-h-full h-20 object-contain bg-cover bg-center mx-auto\"\n            src={(image && URL.createObjectURL(image)) || icone}\n          />\n          <div className=\"text-2xl font-bold text-center mb-8\">{username}</div>\n\n          <label className=\"w-32 flex flex-col items-center p-5 bg-blue-500 hover:bg-blue-700 rounded-md shadow-md tracking-wide cursor-pointer\">\n            <i className=\"fas fa-cloud-upload-alt fa-2x\"></i>\n            <span className=\"mt-2 text-base \">Browse for an avatar</span>\n            <input\n              type=\"file\"\n              className=\"hidden\"\n              accept=\"image/*\"\n              onChange={onFileChange}\n            />\n          </label>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              className=\"text-black\"\n              type=\"text\"\n              placeholder=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              className=\"text-black\"\n              type=\"password\"\n              placeholder=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Confirm password</label>\n            <input\n              className=\"text-black\"\n              type=\"password\"\n              placeholder=\"confirm-password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              onKeyPress={(event) => {\n                if (event.key === 'Enter') {\n                  createUser();\n                }\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <button\n          type=\"button\"\n          className=\"bg-blue-500 rounded-lg px-6 py-2\"\n          onClick={(_) => createUser()}\n        >\n          Register\n        </button>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}