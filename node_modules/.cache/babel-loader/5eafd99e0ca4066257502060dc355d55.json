{"ast":null,"code":"var _jsxFileName = \"/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Axios from '../axios-config';\nimport icone from '../assets/profile-icon.png';\nimport { ChallengeListitem } from '../components/ChallengeListItem';\nimport { ChallengeStat } from '../components/ChallengeStat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Profile = props => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [challenges, setChallenges] = useState([]);\n  const [attempts, setAttempts] = useState([]);\n  const [bootstrap, setBootstrap] = useState({});\n  useEffect(() => {\n    const fetchUser = async () => {\n      Axios.get(`/users/${props.match.params.id}`).then(({\n        data\n      }) => {\n        setUser(data.content);\n      }).catch(err => {\n        if (err.isAxiosError) {\n          toast.error(`Could not load profile: ${err.response.data.message}`);\n        } else {\n          toast.error(`Could not load profile: ${err}`);\n        }\n      });\n    };\n\n    fetchUser();\n  }, [props.match.params.id]);\n  useEffect(() => {\n    const fetchStats = async () => {\n      Axios.get(`attempts/`).then(({\n        data\n      }) => {\n        console.log(data.content);\n        const stats = data.content.filter(stat => (stat === null || stat === void 0 ? void 0 : stat.user) === props.match.params.id);\n        setAttempts(stats);\n      }).catch(err => {\n        if (err.isAxiosError) {\n          toast.error(`Could not load profile: ${err.response.data.message}`);\n        } else {\n          toast.error(`Could not load profile: ${err}`);\n        }\n      });\n    };\n\n    fetchStats();\n  });\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      Axios.get(`/challenges/user/${props.match.params.id}`).then(({\n        data\n      }) => {\n        setChallenges(data.content);\n      }).catch(err => {\n        if (err.isAxiosError) {\n          var _err$response;\n\n          toast.error(`Could not load challenges: ${(_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data.message}`);\n        } else {\n          toast.error(`Could not load challenges: ${err}`);\n        }\n      });\n    };\n\n    fetchChallenges();\n  }, [props.match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-auto w-full grid grid-flow-col grid-rows-2 grid-cols-12 gap-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-flow-row grid-rows-5 row-span-2 gap-4 bg-gray-600 col-span-2 rounded \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" rounded h-min px-16 py-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"profile\",\n          className: \"max-h-full h-20 object-contain bg-cover bg-center mx-auto\",\n          src: user.avatarUrl || icone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold\",\n            children: \"Username :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: user === null || user === void 0 ? void 0 : user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold\",\n            children: \"Email :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid bg-gray-600 col-span-7 rounded p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold\",\n        children: \"Progression :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid bg-gray-600 col-span-7 rounded p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold\",\n        children: \"Stats :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChallengeStat, {\n        className: \"col-span-12\",\n        attempts: attempts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full col-span-4 row-span-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold\",\n        children: \"Challenges :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), challenges.length > 0 ? challenges.map((challenge, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-2\",\n        children: /*#__PURE__*/_jsxDEV(ChallengeListitem, {\n          challenge: challenge\n        }, `challenge-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this)) : 'This user did not create any challenges.']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"kHBK2lDebtyuj9NIYGrsQIKQTZc=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/imane/Documents/M1/S2/Projet annuel/frontend/src/pages/Profile.tsx"],"names":["React","useEffect","useState","toast","Axios","icone","ChallengeListitem","ChallengeStat","Profile","props","user","setUser","challenges","setChallenges","attempts","setAttempts","bootstrap","setBootstrap","fetchUser","get","match","params","id","then","data","content","catch","err","isAxiosError","error","response","message","fetchStats","console","log","stats","filter","stat","fetchChallenges","avatarUrl","username","email","length","map","challenge","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Axios from '../axios-config';\nimport icone from '../assets/profile-icon.png';\nimport {\n  ChallengeAttributes,\n  ChallengeListitem,\n} from '../components/ChallengeListItem';\nimport {\n  AttemptProps,\n  AttemptsCarousel,\n} from '../components/challenges/AttemptsCarousel';\nimport { ChallengeStat, Stats } from '../components/ChallengeStat';\n\ntype ProfileAttributes = {\n  _id: string;\n  username: string;\n  email: string;\n  avatarUrl: string;\n};\n\nexport const Profile = (props: { match: { params: { id: string } } }) => {\n  const [user, setUser] = useState({} as ProfileAttributes);\n  const [challenges, setChallenges] = useState([] as ChallengeAttributes[]);\n  const [attempts, setAttempts] = useState([] as Stats[]);\n  const [bootstrap, setBootstrap] = useState({} as { _id: string });\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      Axios.get(`/users/${props.match.params.id}`)\n        .then(({ data }) => {\n          setUser(data.content);\n        })\n        .catch((err) => {\n          if (err.isAxiosError) {\n            toast.error(`Could not load profile: ${err.response.data.message}`);\n          } else {\n            toast.error(`Could not load profile: ${err}`);\n          }\n        });\n    };\n\n    fetchUser();\n  }, [props.match.params.id]);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      Axios.get(`attempts/`)\n        .then(({ data }) => {\n          console.log(data.content);\n          const stats = data.content.filter(\n            (stat: Stats) => stat?.user === props.match.params.id,\n          );\n          setAttempts(stats);\n        })\n        .catch((err) => {\n          if (err.isAxiosError) {\n            toast.error(`Could not load profile: ${err.response.data.message}`);\n          } else {\n            toast.error(`Could not load profile: ${err}`);\n          }\n        });\n    };\n\n    fetchStats();\n  });\n\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      Axios.get(`/challenges/user/${props.match.params.id}`)\n        .then(({ data }) => {\n          setChallenges(data.content);\n        })\n        .catch((err) => {\n          if (err.isAxiosError) {\n            toast.error(\n              `Could not load challenges: ${err.response?.data.message}`,\n            );\n          } else {\n            toast.error(`Could not load challenges: ${err}`);\n          }\n        });\n    };\n\n    fetchChallenges();\n  }, [props.match.params.id]);\n\n  return (\n    <div className=\"h-auto w-full grid grid-flow-col grid-rows-2 grid-cols-12 gap-4 p-4\">\n      <div className=\"grid grid-flow-row grid-rows-5 row-span-2 gap-4 bg-gray-600 col-span-2 rounded \">\n        <div className=\" rounded h-min px-16 py-6\">\n          <img\n            alt=\"profile\"\n            className=\"max-h-full h-20 object-contain bg-cover bg-center mx-auto\"\n            src={user.avatarUrl || icone}\n          />\n        </div>\n        <div className=\"\">\n          <div className=\"m-4\">\n            <div className=\"font-bold\">Username :</div>\n            <div className=\"\">{user?.username}</div>\n          </div>\n          <div className=\"m-4\">\n            <div className=\"font-bold\">Email :</div>\n            <div className=\"\">{user?.email}</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"grid bg-gray-600 col-span-7 rounded p-4\">\n        <div className=\"font-bold\">Progression :</div>\n      </div>\n      <div className=\"grid bg-gray-600 col-span-7 rounded p-4\">\n        <div className=\"font-bold\">Stats :</div>\n        <ChallengeStat className=\"col-span-12\" attempts={attempts} />\n      </div>\n      <div className=\"flex flex-col w-full col-span-4 row-span-2\">\n        <div className=\"font-bold\">Challenges :</div>\n        {challenges.length > 0\n          ? challenges.map((challenge, index) => (\n              <div className=\"py-2\">\n                <ChallengeListitem\n                  challenge={challenge}\n                  key={`challenge-${index}`}\n                />\n              </div>\n            ))\n          : 'This user did not create any challenges.'}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}